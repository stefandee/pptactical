// Camper Infantry Bot
// Author: Karg
// Date  : 26.01.2003
// Info  : stand in a point, scan the area around, fire if someone in range
//         sort of sentinel (i-sentinel.csl), but the scan is done differently 

// states
const S_INIT = 0;
const S_SCAN = 1;
const S_FIRE = 2;
const S_RELOCATE = 3;
const S_RELOCATING = 4;

// bot parameters
const R_RADIUS = 5; // radius for relocation
const R_MOBILITY = 18;
const R_EAGLEEYES = 85;

var state = S_INIT, originalX, originalY;
var enemyId = -1, myId = -1;

ScanEnemy()
{
  var eNo, i, uid, uStatus;

  // he's already got an enemy
  if (enemyId != -1)
  {
    return;
  }

  eNo = Scan(0);

  // no enemy in range
  if (eNo <= 0)
  {
    return;
  }

  for(i = 0; i < eNo; i++)
  {
    uid = UnitInView(0, i);
        
    // check if unit is an enemy and is in weapon range
    if (UnitRelation(uid) == 3 && UnitDist(uid) < WeaponRange(1))
    {
      // check if unit uid is dead
      uStatus = UnitStatus(uid);
      
      if (uStatus == 1)
      {
	continue;
      }

      enemyId = uid; 
      LookTo(0, enemyId);

      if (FireTo(enemyId) != 1)
      {
        enemyId = -1;
        continue;
      }

      //enemyId = -1; 
      state = S_FIRE;
      return;
    }
  }
}

ScanAttackers()
{
  var aNo = AttackerOfCount(myId), i, uId;

  if (aNo <= 0)
  {
    return;
  }

  for(i = 0; i < aNo; i++)
  {
    uId = AttackerOf(myId, i);

    SetScanAngle(0, 0);

    if (FireTo(uId) == 1)
    {
      LookTo(0, uId);
      enemyId = uId;
      state = S_FIRE;
      return;    
    }

    SetScanAngle(0, 90);

    if (FireTo(uId) == 1)
    {
      LookTo(0, uId);
      enemyId = uId;
      state = S_FIRE;
      return;    
    }

    SetScanAngle(0, 180);

    if (FireTo(uId) == 1)
    {
      LookTo(0, uId);
      enemyId = uId;
      state = S_FIRE;
      return;    
    }

    SetScanAngle(0, 270);

    if (FireTo(uId) == 1)
    {
      LookTo(0, uId);
      enemyId = uId;
      state = S_FIRE;
      return;    
    }
  }

  // my attackers are out of the visual range, just relocate 
  LookTo(0, enemyId);
  state = S_RELOCATE;
}

Relocate()
{
  if (!Moving())
  {
    // relocate aroun the original point, with a certain extent
    var angle = random(360) * 3.1415 / 180.0;
    var newX = originalX + R_RADIUS * cos(angle);
    var newY = originalY + R_RADIUS * sin(angle);

    Move(newX, newY);

    state = S_RELOCATING;
  }
}

Relocating()
{
  if (!Moving())
  {
    // relocation succesful, return to scan mode
    state = S_SCAN;
  }
}

Init()
{
  // original coordinates, so that the bot will return to its location
  originalX = MyX();
  originalY = MyY();
  myId      = MyId();

  state = S_SCAN;
}

CheckFire()
{
  const unitStatus = UnitStatus(enemyId);
  
  // if the enemy is no longer in visual range
  // if the enemy is dead
  // then change status to scaning
  if (unitStatus == 0 || unitStatus == 1)
  {
    enemyId = -1;
    state = S_SCAN;
  }
}

main()
{
  // state machine switcher
  if (state == S_INIT)
  {
    Init();
  }

  if (state == S_SCAN)
  {
    ScanEnemy();

    ScanAttackers();

    // relocating when no enemy set
    if (enemyId == -1)
    {
      if (random(20) >= R_MOBILITY)
      {
        state = S_RELOCATE;
      }

      // look around from time to time
      if (random(100) > R_EAGLEEYES)
      {
        SetScanAngle(0, GetScanAngle(0) + random(20) - 10);
      }
    }
  }

  if (state == S_FIRE)
  {
    CheckFire();
  }

  if (state == S_RELOCATE)
  {
    Relocate();
  }

  if (state == S_RELOCATING)
  {
    Relocating();
  }
}
